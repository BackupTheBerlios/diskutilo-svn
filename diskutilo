#!/usr/bin/perl -w
#Diskutilo

use strict;
use warnings;

use Data::Dumper;
use jabber;
use gui_glade;
use XML::Simple qw(:strict);

my $config_file_name="config";
my $diskutilo = main->new;
$diskutilo->{config} = $diskutilo->read_config($config_file_name);
$diskutilo->{gui} = gui_glade->new($diskutilo->{config}->{gui}, $diskutilo);
if(defined($diskutilo->{config}->{accounts})) {
    foreach (keys(%{$diskutilo->{config}->{accounts}})) {
	$diskutilo->open_account($_, $diskutilo->{config}->{accounts}->{$_});
    }
}
$diskutilo->{gui}->main;
exit 0;


package main;
#GLOBAL
sub new {
    my ($class) = @_;
    my $this = {};
    bless($this, $class);

    return $this;
}

sub set_global_state {
    my ($this, $state) = @_;
    print "set_global_state : $state\n";
    $this->set_account_state($_, $state) foreach (keys(%{$this->{jabber}}));
}

#CONFIG
sub read_config {
    my ($this, $file_name) = @_;
    if (-e $file_name) {
	$this->{config}->{accounts} = XMLin($file_name, ForceArray => 1, KeyAttr => "key");
    }
}

#ACCOUNT
sub open_account {
    my ($this, $ajid, $config) = @_;
    $this->{jabber}->{$ajid} = jabber->new($config, $this);
    $this->{gui}->add_account($ajid, $config->{name}, sub{$this->{jabber}->{$ajid}->Process;1});
}

sub add_account {
    my ($this, $ajid, $config) = @_;
    $this->{config}->{accounts}->{$ajid} = $config;
    XMLout($this->{config}, KeyAttr => "key", OutputFile => $config_file_name);
    $this->open_account($ajid, $config);
}

sub set_account_state {
    my ($this, $ajid, $state) = @_;
    print "account $ajid : $state\n";
    return -1 if(!defined($this->{jabber}->{$ajid}));
    return -1 if($this->{jabber}->{$ajid}->set_state($state, "") == -1);
    $this->{gui}->set_account_state($ajid, $state);
    return 0;
}

sub remove_account {
    my ($this, $ajid) = @_;
    $this->set_account_state($ajid, "offline");
    $this->{gui}->remove_account($ajid);
    delete($this->{config}->{accounts}->{$ajid});
    XMLout($this->{config}, KeyAttr => "key", OutputFile => $config_file_name);
}

#CONTACT
sub get_contact_name {
    my ($this, $ajid, $jid) = @_;
    my $name = $this->{jabber}->{$ajid}->{roster}->{$jid}->{name};
    $name = $jid unless($name);
    return ($name);
}

sub send_chat {
    my ($this, $ajid, $jid, $body) = @_;
    $this->{jabber}->{$ajid}->send_chat($jid, $body);
}

sub on_contact_message {
    my ($this, $ajid, $fjid, $type, $body, $subject) = @_;

    $this->{gui}->on_chat($ajid, $fjid, $fjid, $body) if($type eq "chat");
    print "type: $type\n";
    $this->{gui}->on_message($ajid, $fjid, $fjid, $subject, $body) if($type eq "message");
    $this->{gui}->on_headline($ajid, $fjid, $fjid, $subject, $body) if($type eq "headline");

}

sub remove_contact {
    my ($this, $ajid, $jid) = @_;
    $this->{jabber}->{$ajid}->remove_contact($jid);
}

sub on_contact_presence {
    my ($this, $ajid, $fjid, $state) = @_;
    $this->{gui}->on_contact_presence($ajid, $fjid, $state);
}

1;
